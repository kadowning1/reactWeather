import type { GetServerSideProps, NextPage } from 'next'
import Head from 'next/head'
import { useState } from 'react';
import Forecast from '../components/Forecast';
import Header from '../components/Header';
import { WeatherLocation } from '../model/Weather';
// import Image from 'next/image'


export interface Props {
  data?: any,
  zipCode?: number
}

export const Home: NextPage = ({ data }: Props) => {
  return (
    <div className='bg-red-300'>
      <Head>
        <title>Weather App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <div>
        {/* <Forecast data={data as any} /> */}
      </div>
    </div>
  )
};

export default Home;


export const getServerSideProps: GetServerSideProps = async (context) => {
  const key: string = process.env.REACT_APP_OPEN_WEATHER_API_KEY as string;
  if (key === undefined) {
    throw new Error('No Open Weather API Key defined - ensure you set a variable called REACT_APP_OPEN_WEATHER_API_KEY')
  }
  const keyQuery = `appid=${key}`
  const server = 'http://api.openweathermap.org/data/2.5';


  const apiLink = "https://api.openweathermap.org/data/2.5/weather?zip=90210,us&appid=225e9979cafa7faa49ef4c637d23e637";
  const res = await fetch(apiLink);
  const data = await res.json();

  async function searchLocation(term: string): Promise<WeatherLocation | undefined> {
    const result = await fetch(`${server}/weather?q=${term}&${keyQuery}`);

    if (result.status === 404) return undefined;
    if (result.status !== 200) throw new Error('Failed to read location data');

    const data = await result.json();
  }

  return {
    props: {
      data: data,
      zipCode: context.query.zipCode,
    },
  }
};
